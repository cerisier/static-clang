filegroup(
    name = "headers",
    srcs = glob([
        "include/**",
        "src/*.h",
        "src/*.hpp",
    ]),
)

LOCAL_DEFINES = [
    "_LIBUNWIND_DISABLE_VISIBILITY_ANNOTATIONS",

    # This is intentionally always defined because the macro definition means, should it only
    # build for the target specified by compiler defines. Since we pass -target the compiler
    # defines will be correct.
    "_LIBUNWIND_IS_NATIVE_ONLY",
    "_DEBUG",
    # "_LIBUNWIND_HAS_NO_THREADS", # ANY_NON_SINGLE_THREADED
    # "_DCOMPILER_RT_ARMHF_TARGET", # ARM
]

CFLAGS = [
    "-nostdinc",
    "-Wa,--noexecstack",
    "-fvisibility=hidden",
    "-fvisibility-inlines-hidden",
    "-fvisibility-global-new-delete=force-hidden",
    "-Wno-bitwise-conditional-parentheses",
    "-Wno-visibility",
    "-Wno-incompatible-pointer-types",
    "-Wno-dll-attribute-on-redeclaration",
]

cc_library(
    name = "libunwind_cxx",
    copts = CFLAGS + [
        "-fno-exceptions",
        "-fno-rtti",
    ],
    local_defines = LOCAL_DEFINES,
    hdrs = [
        ":headers",
    ],
    includes = [
        "include",
        "src",
    ],
    srcs = [
        "src/libunwind.cpp",
        "src/Unwind-EHABI.cpp",
        "src/Unwind-seh.cpp",
        "src/Unwind_AIXExtras.cpp",
    ],
    deps = [
        "//lib:builtin_headers",
        "//lib:c",
    ],
    features = ["-default_compile_flags"],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "libunwind_c",
    copts = CFLAGS + [
        "-std=c99",
        "-fexceptions",
    ],
    features = ["-default_compile_flags"],
    local_defines = LOCAL_DEFINES,
    hdrs = [
        ":headers",
    ],
    includes = [
        "include",
        "src",
    ],
    textual_hdrs = glob([
        "src/*.h"
    ]),
    srcs = [
        "src/UnwindLevel1.c",
        "src/UnwindLevel1-gcc-ext.c",
        "src/Unwind-sjlj.c",
        "src/Unwind-wasm.c",
        "src/UnwindRegistersRestore.S",
        "src/UnwindRegistersSave.S",
        "src/gcc_personality_v0.c",
    ],
    deps = [
        "//lib:builtin_headers",
        "//lib:c",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "libunwind",
    deps = [
        ":libunwind_c",
        ":libunwind_cxx",
    ],
    visibility = ["//visibility:public"],
)
